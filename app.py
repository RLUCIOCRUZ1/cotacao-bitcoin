# app.py
import streamlit as st
from fetch import get_cotacoes
from plot import gerar_graficos
from carteira import carregar_saldo, salvar_saldo
from streamlit_autorefresh import st_autorefresh
from datetime import datetime
import os
import pytz

st.set_page_config(page_title="Cota√ß√£o BTC e D√≥lar", layout="centered")

# Estilo responsivo
st.markdown("""
    <style>
    @media (max-width: 768px) {
        .css-1v0mbdj, .stMetric, .stButton, .css-1cpxqw2 {
            font-size: 16px !important;
            text-align: center !important;
        }
        .stMetric {
            margin-bottom: 12px !important;
        }
        .css-1r6slb0, .block-container {
            padding: 1rem !important;
        }
    }
    body {
        font-family: 'Segoe UI', sans-serif;
    }
    </style>
""", unsafe_allow_html=True)

st.title("üìà Cota√ß√£o do Bitcoin e D√≥lar")

# Inicializar saldo persistente na sess√£o
if "saldo_btc" not in st.session_state:
    st.session_state.saldo_btc = carregar_saldo()


# Atualiza√ß√£o autom√°tica a cada 2 minutos (120000 ms)
st_autorefresh(interval=120000, key="auto_refresh")

st.button("üîÅ Atualizar agora")  # Apenas visual (sem fun√ß√£o extra)

fuso_brasilia = pytz.timezone("America/Sao_Paulo")
agora_brasilia = datetime.now(fuso_brasilia)

st.caption(f"‚è±Ô∏è √öltima atualiza√ß√£o: {agora_brasilia.strftime('%d/%m/%Y %H:%M:%S')}")

# Buscar cota√ß√µes
cotacoes = get_cotacoes()

if cotacoes:
    st.metric("üíµ D√≥lar (USD/BRL)", f"R$ {cotacoes['usd_brl']:.2f}")
    st.metric("‚Çø Bitcoin (BRL)", f"R$ {cotacoes['btc_brl']:,.2f}")
    st.metric("‚Çø Bitcoin (USD)", f"$ {cotacoes['btc_usd']:,.2f}")

    st.markdown("---")
    st.subheader("üíº Minha Carteira de Bitcoin")
    st.write(f"Saldo atual de BTC: **{st.session_state.saldo_btc:.8f}**")

    col1, col2 = st.columns(2)
    with col1:
        add_btc = st.number_input("Adicionar BTC", min_value=0.0, step=0.00001, format="%f", key="add")
        if st.button("‚ûï Adicionar"):
            st.session_state.saldo_btc += add_btc
            salvar_saldo(st.session_state.saldo_btc)
            os._exit(0)

    with col2:
        remove_btc = st.number_input("Retirar BTC", min_value=0.0, step=0.00001, format="%f", key="remove")
        if st.button("‚ûñ Retirar"):
            st.session_state.saldo_btc = max(0.0, st.session_state.saldo_btc - remove_btc)
            salvar_saldo(st.session_state.saldo_btc)
            # app.py
import streamlit as st
from fetch import get_cotacoes
from plot import gerar_graficos
from carteira import carregar_saldo, salvar_saldo
from streamlit_autorefresh import st_autorefresh
from datetime import datetime
import os
import pytz

st.set_page_config(page_title="Cota√ß√£o BTC e D√≥lar", layout="centered")

# Estilo responsivo
st.markdown("""
    <style>
    @media (max-width: 768px) {
        .css-1v0mbdj, .stMetric, .stButton, .css-1cpxqw2 {
            font-size: 16px !important;
            text-align: center !important;
        }
        .stMetric {
            margin-bottom: 12px !important;
        }
        .css-1r6slb0, .block-container {
            padding: 1rem !important;
        }
    }
    body {
        font-family: 'Segoe UI', sans-serif;
    }
    </style>
""", unsafe_allow_html=True)

st.title("üìà Cota√ß√£o do Bitcoin e D√≥lar")

# Inicializar saldo persistente na sess√£o
if "saldo_btc" not in st.session_state:
    st.session_state.saldo_btc = carregar_saldo()


# Atualiza√ß√£o autom√°tica a cada 2 minutos (120000 ms)
st_autorefresh(interval=120000, key="auto_refresh")

st.button("üîÅ Atualizar agora")  # Apenas visual (sem fun√ß√£o extra)

fuso_brasilia = pytz.timezone("America/Sao_Paulo")
agora_brasilia = datetime.now(fuso_brasilia)

st.caption(f"‚è±Ô∏è √öltima atualiza√ß√£o: {agora_brasilia.strftime('%d/%m/%Y %H:%M:%S')}")

# Buscar cota√ß√µes
cotacoes = get_cotacoes()

if cotacoes:
    st.metric("üíµ D√≥lar (USD/BRL)", f"R$ {cotacoes['usd_brl']:.2f}")
    st.metric("‚Çø Bitcoin (BRL)", f"R$ {cotacoes['btc_brl']:,.2f}")
    st.metric("‚Çø Bitcoin (USD)", f"$ {cotacoes['btc_usd']:,.2f}")

    st.markdown("---")
    st.subheader("üíº Minha Carteira de Bitcoin")
    st.write(f"Saldo atual de BTC: **{st.session_state.saldo_btc:.8f}**")

    col1, col2 = st.columns(2)
    with col1:
        add_btc = st.number_input("Adicionar BTC", min_value=0.0, step=0.00001, format="%f", key="add")
        if st.button("‚ûï Adicionar"):
            st.session_state.saldo_btc += add_btc
            salvar_saldo(st.session_state.saldo_btc)
            st.rerun()

    with col2:
        remove_btc = st.number_input("Retirar BTC", min_value=0.0, step=0.00001, format="%f", key="remove")
        if st.button("‚ûñ Retirar"):
            st.session_state.saldo_btc = max(0.0, st.session_state.saldo_btc - remove_btc)
            salvar_saldo(st.session_state.saldo_btc)
            st.rerun()

    valor_em_brl = st.session_state.saldo_btc * cotacoes['btc_brl']
    valor_em_usd = st.session_state.saldo_btc * cotacoes['btc_usd']

    col3, col4 = st.columns(2)
    col3.metric("üí∞ Valor em Reais (BRL)", f"R$ {valor_em_brl:,.2f}")
    col4.metric("üíµ Valor em D√≥lar (USD)", f"$ {valor_em_usd:,.2f}")

    st.markdown("---")
    st.subheader("üìä Hist√≥rico de Pre√ßos")
    periodo = st.selectbox("Escolha o per√≠odo:", ["7 dias", "30 dias", "90 dias"])

    fig_btc_usd, fig_usd = gerar_graficos(periodo)
    st.plotly_chart(fig_btc_usd, use_container_width=True)
    st.plotly_chart(fig_usd, use_container_width=True)
else:
    st.error("Erro ao buscar cota√ß√µes. Verifique sua conex√£o.")

    valor_em_brl = st.session_state.saldo_btc * cotacoes['btc_brl']
    valor_em_usd = st.session_state.saldo_btc * cotacoes['btc_usd']

    col3, col4 = st.columns(2)
    col3.metric("üí∞ Valor em Reais (BRL)", f"R$ {valor_em_brl:,.2f}")
    col4.metric("üíµ Valor em D√≥lar (USD)", f"$ {valor_em_usd:,.2f}")

    st.markdown("---")
    st.subheader("üìä Hist√≥rico de Pre√ßos")
    periodo = st.selectbox("Escolha o per√≠odo:", ["7 dias", "30 dias", "90 dias"])

    fig_btc_usd, fig_usd = gerar_graficos(periodo)
    st.plotly_chart(fig_btc_usd, use_container_width=True)
    st.plotly_chart(fig_usd, use_container_width=True)
else:
    st.error("Erro ao buscar cota√ß√µes. Verifique sua conex√£o.")

